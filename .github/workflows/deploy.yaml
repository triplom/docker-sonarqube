name: Build and Deploy

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod
      component:
        description: 'Component to deploy'
        required: false
        default: 'all'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        run: |
          echo "repo_name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
      
      - name: Build and push with Docker Compose
        run: |
          # Set environment variables for Docker Compose
          export DOCKER_REGISTRY=ghcr.io
          export IMAGE_TAG=${{ github.sha }}
          export REPO_NAME=${{ steps.meta.outputs.repo_name }}
          
          # Print Docker Compose configuration
          echo "Building using docker-compose.yml:"
          docker-compose config
          
          # Build and push all services defined in docker-compose.yml
          docker-compose build
          
          # Tag and push each service
          services=$(docker-compose config --services)
          for service in $services; do
            # Get the image name from docker-compose
            image_name=$(docker-compose images -q $service)
            
            # Tag with GitHub Container Registry path
            docker tag $image_name ghcr.io/${{ steps.meta.outputs.repo_name }}/$service:${{ github.sha }}
            docker tag $image_name ghcr.io/${{ steps.meta.outputs.repo_name }}/$service:latest
            
            # Push both tags
            docker push ghcr.io/${{ steps.meta.outputs.repo_name }}/$service:${{ github.sha }}
            docker push ghcr.io/${{ steps.meta.outputs.repo_name }}/$service:latest
            
            echo "Pushed: ghcr.io/${{ steps.meta.outputs.repo_name }}/$service:${{ github.sha }}"
          done
  
  trigger-deployment:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Extract metadata
        id: meta
        run: |
          echo "repo_name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      
      - name: Trigger Deployment
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.DEPLOY_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/triplom/infrastructure-repo/dispatches \
            -d '{
              "event_type": "app-deployment-request",
              "client_payload": {
                "app_name": "docker-sonarqube",
                "version": "${{ github.sha }}",
                "repository": "${{ github.repository }}",
                "ref": "${{ github.ref_name }}",
                "registry": "ghcr.io/${{ steps.meta.outputs.repo_name }}",
                "environment": "${{ inputs.environment || '"'"'dev'"'"' }}"
              }
            }'